# -*- coding: utf-8 -*-
"""FashionMnist.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pPvZpjvNExPOu028kivdn5BnhR4TNUff
"""

import tensorflow as tf
from tensorflow import keras
import matplotlib.pyplot as plt
from keras.models import Sequential
from keras.layers import Dense, Activation
from keras.optimizers import Adam, SGD
from keras.datasets import fashion_mnist

(X_train, y_train), (X_test, y_test) = fashion_mnist.load_data()

print('Total no of train Images: ',X_train.shape[0])
print('Size of Image:', X_train.shape[1:])
print('Total no of labels:', y_train.shape)
X_train.shape

X_train[0]

plt.imshow(X_train[2000], cmap = plt.get_cmap('gray'))



X_train.shape,X_test.shape

X_train = X_train.reshape((X_train.shape[0],-1))
X_test = X_test.reshape((X_test.shape[0], -1))

print(X_train.shape, X_test.shape,y_train.shape,y_test.shape)

X_train = X_train/255
X_test = X_test/255
X_train.shape

X_train[0]

num_classes = 10
y_train_encoded= tf.one_hot(y_train, depth=10)
y_test_encoded= tf.one_hot(y_test, depth=10)
ny_train=y_train_encoded.numpy()
ny_test=y_test_encoded.numpy()
ny_train.shape
print(ny_train[5],y_train[5])

num_input = 784
num_classes = 10

model = Sequential()
model.add(Dense(256, input_dim=784, activation='relu'))
model.add(Dense(64, activation='relu'))
model.add(Dense(10, activation='softmax'))

model.summary()

opt=Adam(learning_rate=0.001)

model.compile(loss='categorical_crossentropy', optimizer= opt, metrics=['accuracy'])

histo=model.fit(X_train, ny_train, epochs=50, batch_size=1000, verbose=1)

plt.plot(histo.history['accuracy'])
plt.title('model loss')
plt.ylabel('error')
plt.xlabel('epoch')
plt.legend(['train'], loc='upper left')
plt.legend()
plt.show()

scores = model.evaluate(X_test, ny_test, verbose=1)
print("accuracy =",scores[1])